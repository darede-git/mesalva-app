name: Deploy Elastic Beanstalk

on:
  push:
    branches: [main]

env:
  APP_NAME: ${{ secrets.APP_NAME }}
  RUN_NUMBER: ${{ github.run_number }}
  RUN_ATTEMPT: ${{ github.run_attempt }}
  AWS_S3_BUCKET: ${{ secrets.AWS_SANDBOX_GITHUB_ACTIONS_S3 }}
  AWS_SECRET_KEY_ID: ${{ secrets.AWS_SANDBOX_GITHUB_ACTIONS_KEY }}
  AMAZON_SECRET_ACCESS_KEY: ${{ secrets.AWS_SANDBOX_GITHUB_ACTIONS_SECRET }}
  AWS_REGION: ${{ secrets.AWS_SANDBOX_GITHUB_ACTIONS_REGION }}

jobs:
  deploy:
    name: Development
    runs-on: ubuntu-latest

    steps:
      - name: Get runtime build variables
        id: localvars
        run: |
          echo "::set-output name=PULL_NUMBER::$(echo $GITHUB_REF | awk -F / '{print $3}')"
          echo "::set-output name=IMAGE_TAG::${{ env.APP_NAME }}-$(echo $GITHUB_REF | awk -F / '{print $3}')-${{ env.RUN_NUMBER }}-${{ env.RUN_ATTEMPT }}"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_SECRET_KEY_ID }}
          aws-secret-access-key: ${{ env.AMAZON_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get .env from Amazon SSM
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          node bin/ebs-options-to-env > .env

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          IMAGE_TAG: ${{ steps.localvars.outputs.IMAGE_TAG }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}/${{ env.APP_NAME }}
        run: |
          echo "{\"AWSEBDockerrunVersion\":\"1\",\"Image\": { \"Name\": \"$ECR_REGISTRY:$IMAGE_TAG\",\"Update\":\"true\"},\"Ports\": [{\"HostPort\": 80,\"ContainerPort\": 3000}]}" > ebs-config.json
          docker build -t $ECR_REGISTRY:$IMAGE_TAG -t $ECR_REGISTRY:latest .
          docker push $ECR_REGISTRY:$IMAGE_TAG
          docker push $ECR_REGISTRY:latest
          echo "::set-output name=image::$ECR_REGISTRY:$IMAGE_TAG"

      - name: AWS CLI Upload version file
        run: |
          aws s3 cp ebs-config.json s3://${{ env.AWS_S3_BUCKET }}/${{ steps.localvars.outputs.IMAGE_TAG }}.json

      - name: AWS CLI Create EB Version
        run: |
          aws elasticbeanstalk create-application-version --application-name ${{ env.APP_NAME }} --version-label ${{ steps.localvars.outputs.IMAGE_TAG }} --source-bundle S3Bucket=${{ env.AWS_S3_BUCKET }},S3Key=${{ steps.localvars.outputs.IMAGE_TAG }}.json

      - name: AWS CLI Deploy EB Version
        run: |
          aws elasticbeanstalk update-environment --application-name ${{ env.APP_NAME }} --environment-name ${{ env.APP_NAME }} --version-label=${{ steps.localvars.outputs.IMAGE_TAG }} --option-settings file://bin/ebs-options.json
