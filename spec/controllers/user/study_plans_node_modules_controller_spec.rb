# frozen_string_literal: true

require 'rails_helper'

RSpec.describe User::StudyPlanNodeModulesController, type: :controller do
  let(:new_attributes) { { completed: true } }
  let!(:entity) { create(:study_plan_node_module) }
  let(:default_serializer) { V2::StudyPlan::StudyPlanNodeModuleSerializer }
  let(:default_model) { StudyPlanNodeModule }

  describe "PUT #update" do
    before do
      entity.study_plan.update(user_id: user.id)
    end
    it_behaves_like 'a unauthorized update route for', %w[admin guest]
    context 'entity does not belong to user' do
      before do
        build_session('user')
        entity.study_plan.update(user_id: create(:user).id)
      end
      it 'returns unauthorized' do
        put :update, params: new_attributes.merge(id: entity.to_param)

        assert_type_and_status(:unauthorized)
      end
    end
    context 'updating already_known' do
      before do
        build_session('user')
      end
      it 'does not update completed flag' do
        put :update, params: { id: entity.to_param, already_known: true }

        expect(entity.reload.already_known).to be_truthy
        expect(entity.reload.completed).to be_falsey
      end
    end
    it 'includes entity attributes' do
      build_session('user')

      put :update, params: new_attributes.merge(id: entity.to_param)

      expect(parsed_response['data']['attributes'].keys).to \
        eq(%w[node-module subject permalink position completed already-known])
    end
  end

  context 'entity does not exist' do
    let(:allowed_role) { 'user' }
    it_behaves_like 'a not found response for action', %i[update]
  end
end
