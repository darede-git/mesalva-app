# frozen_string_literal: true

class User::StudyPlanNodeModulesController < ApplicationController
  before_action -> { authenticate(%w[user]) }

  before_action :set_study_plan_node_module
  rescue_from ActiveRecord::RecordNotFound, with: :render_not_found
  before_action :validate_user_study_plan

  def update
    if @study_plan_node_module.update(entity_params)
      render json: serialize(@study_plan_node_module, serializer: 'StudyPlan::StudyPlanNodeModule'),
             status: :ok
    else
      render_unprocessable_entity(@study_plan_node_module.errors.messages)
    end
  end

  private

  def set_study_plan_node_module
    @study_plan_node_module = StudyPlanNodeModule.find(params[:id])
  end

  def entity_params
    params.permit(:completed, :already_known)
  end

  def validate_user_study_plan
    return if @study_plan_node_module.study_plan.user_id == current_user.id

    render_unauthorized('permalink.unauthorized')
  end
end
